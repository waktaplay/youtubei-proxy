# Handle all other requests
location / {
    # Handle CORS preflight requests
    if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' $http_origin;
        add_header 'Access-Control-Allow-Methods' '*';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, x-goog-visitor-id, x-origin, x-youtube-client-version, x-youtube-client-name, x-goog-api-format-version, x-user-agent, Accept-Language, Range, Referer';
        add_header 'Access-Control-Max-Age' '86400';
        add_header 'Access-Control-Allow-Credentials' 'true';
        return 200;
    }

    set $target '';

    # Extract the __host parameter from the query string
    if ($arg___host) {
        set $target $arg___host;
    }

    # If __host parameter is missing, return 400
    if ($target = '') {
        return 400 'Request is formatted incorrectly. Please include __host in the query string.';
    }

    # Remove __host and __headers from the query string
    rewrite ^(.*)\?__host=$target&?(.*)$ $1?$2;

    # Set up the proxy
    proxy_pass https://$target$request_uri;
    proxy_set_header Host $target;
    proxy_set_header Origin $target;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Forward the request body and headers
    proxy_set_header Range $http_range;
    proxy_set_header User-Agent $http_user_agent;
    
    proxy_hide_header 'Access-Control-Allow-Origin';
    proxy_hide_header 'Access-Control-Allow-Methods';
    proxy_hide_header 'Access-Control-Allow-Headers';
    proxy_hide_header 'Access-Control-Allow-Credentials';

    add_header 'Access-Control-Allow-Origin' $http_origin;
    add_header 'Access-Control-Allow-Methods' '*';
    add_header 'Access-Control-Allow-Headers' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
}
